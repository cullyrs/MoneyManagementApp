/**
 * Name : Arewa (Morountudun) Ojelade
 * Date : 1/31/2025
 * File Name: category.js
 * Course : CMSC 495 Capstone in Computer Science
 * Project : Expense Tracker Capstone Project
 * Description : The purpose of the category.js module is to provide 
 * compact functions to interact with the Category collection of
 * the Expense Tracker Accounts database.
 */
import mongoose from "mongoose";
import Category from "./models/Category.js";
import connectDB from "./dbconnect.js"; connectDB();

/**
 * Function to add a category to the Category collection of the 
 * Expense Tracker Accounts database. The transactionList array in the 
 * User collection is updated with the unique transaction _id.
 * @param {String} name - The name of the associated Category instance. 
 * @param {INT32} id - The unique categoryID (id) of the transaction. 
 * @returns {Object} The  created instance of the category object.
 */
const addCategory = async(name,id)=>{   
    const category = await Category.create({
        id : id,
        name : name
    });
    return category;
};

/**
 * Function to initialize the Category collection of the 
 * Expense Tracker Accounts database with generic categories. 
 * Each category owns a unique _id generated by MongoDB, and 
 * a unique categoryID utilized for application purposes.
 */
const initializeCategories = async() =>{
    const names = ["All","Housing","Transportation","Vehicle","Life & Entertainment",
                "Food & Drinks", "Income","Investments"];

    names.forEach((name,index)=>{
        const category = addCategory(name, index);
    });
   
};
/**
 * Function to delete the categories by the specified version in the 
 * Expense Tracker Accounts database. This function is designed for
 * internal database maintainance and is not exported from the module.
 * @param {INT32} version - The version of Category instances to be deleted. 
 * @returns {Object} The  deleted instances of the categories that match specified version.
 */
const deleteCategories = async(version) =>{
   
    const deleted = await Category.deleteMany({version : version});
    console.log(deleted);
};
export {initializeCategories as default, addCategory}
